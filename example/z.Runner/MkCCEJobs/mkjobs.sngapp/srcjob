#!/bin/sh

source ${src} 

#############################################################################
#
# Small job
# 
#############################################################################
if [ ${opt} == "small" ]; then

for (( i=${cista}; i<${ciend}; i=(( ${i} + ${cstep} )) ))
do

############################################################################
cista_new=${i}
ciend_new=$(( ${i} + ${cstep} - 1 ))
cat << EOF > ${fjob}_${cista_new}_${ciend_new}
#!/bin/sh
#SBATCH -J ${JOBNAME}${VariableName}_${var}${unit}_${cista_new}_${ciend_new}
#SBATCH -p 24core
#SBATCH --nodes=8
#SBATCH --ntasks-per-node=24
#SBATCH --cpus-per-task=1
#SBATCH --out outfile
#SBATCH --time=48:00:00
#SBATCH --qos=medium
#SBATCH --mem-per-cpu=5300

module purge 
module load icc18 icc18.impi fftw mkl2018 
#export LD_LIBRARY_PATH=/home/CQML/lib/gsl-2.7.1/lib:\$LD_LIBRARY_PATH

export OMP_NUM_THREADS=\$SLURM_CPUS_PER_TASK
NTASKS=\$((\$SLURM_NTASKS_PER_NODE * \$SLURM_JOB_NUM_NODES))

echo "NTASKS =" \$NTASKS
echo "NUM_NODES = " \$SLURM_JOB_NUM_NODES
env | grep SLURM

node_process=\$NTASKS

#############################################
# Main Paramaters

#bath number
cista=${cista_new}
ciend=${ciend_new}
sista=${sista}
siend=${siend}

#option input
CodePath="${CodePath}"

# inputfiles
mkdir ${OutFileDir}
option_input="./ccein.js"
BathFile="${BathFile}"
AvaaxFile="${AvaaxFile}"
StateFile="${StateFile}"
ExStateFile="${ExStateFile}"

# outfiles
outFile="${OutFileDir}${OutFileHead}${VariableName}_${var}${unit}_"

#time checking
startTime=\$(date +%s.%N)
startTime_string=\`date\`
#############################################################################
#about CCE2 calculation 
configures=\$(seq \${cista} 1 \${ciend})
states=\$(seq \${sista} 1 \${siend})

for m in \$configures
do
	for s in \$states
	do

   	 mpirun -n \${node_process} \${CodePath} -f \${option_input} -I "\${BathFile}\${m}" -a "\${AvaaxFile}\${m}" -s "\${StateFile}\${s}" -S "\${ExStateFile}\${s}" -o "\${outFile}\${m}{\${s}}" > "Process_\${m}{\${s}}"

	done
done

#############################################################################$
endTime=\$(date +%s.%N)
endTime_string=\`date\`

elapsed=\`echo "(\$endTime-\$startTime)" |bc\`
htime=\`echo "\$elapsed/3600"|bc\`
mtime=\`echo "(\$elapsed/60)-(\$htime*60)"|bc\`
stime=\`echo "\$elapsed-((\$elapsed/60)*60)"|bc\`
echo "Start time : \$startTime_string"
echo "End time   : \$endTime_string"
echo "Total time : \${htime}H \${mtime}M \${stime}S"

EOF
done
fi

#############################################################################
#
# Large job
# 
#############################################################################
if [ ${opt} == "large" ]; then
cat << EOF > ${fjob} 
#!/bin/sh
#SBATCH -J ${JOBNAME}${VariableName}_${var}${unit}
#SBATCH -p 24core
#SBATCH --nodes=8
#SBATCH --ntasks-per-node=24
#SBATCH --cpus-per-task=1
#SBATCH --out outfile
#SBATCH --time=48:00:00
#SBATCH --qos=medium
#SBATCH --mem-per-cpu=5300

module purge 
module load icc18 icc18.impi fftw mkl2018 
export LD_LIBRARY_PATH=/home/CQML/lib/gsl-2.7.1/lib:\$LD_LIBRARY_PATH

export OMP_NUM_THREADS=\$SLURM_CPUS_PER_TASK
NTASKS=\$((\$SLURM_NTASKS_PER_NODE * \$SLURM_JOB_NUM_NODES))

echo "NTASKS =" \$NTASKS
echo "NUM_NODES = " \$SLURM_JOB_NUM_NODES
env | grep SLURM

node_process=\$NTASKS

#############################################
# Main Paramaters

#bath number
cista=${cista}
ciend=${ciend}
sista=${sista}
siend=${siend}

#option input
CodePath="${CodePath}"

# inputfiles
BathFile="${BathFile}"
AvaaxFile="${AvaaxFile}"
StateFile="${StateFile}"
ExStateFile="${ExStateFile}"

configures=\$(seq \${cista} 1 \${ciend})
states=\$(seq \${sista} 1 \${siend})

#time checking
startTime=\$(date +%s.%N)
startTime_string=\`date\`

#############################################################################
#about CCE2 calculation 

for var in ${varOpt}
do

cd \${var}${unit}

option_input="./ccein.js"
# outfiles
mkdir rawdata
outFile="${OutFileDir}${OutFileHead}${VariableName}_\${var}${unit}_"

for m in \$configures
do
	for s in \$states
	do

   	 mpirun -n \${node_process} \${CodePath} -f \${option_input} -I "\${BathFile}\${m}" -a "\${AvaaxFile}\${m}" -s "\${StateFile}\${s}" -S "\${ExStateFile}\${s}" -N 1 -o "\${outFile}\${m}{\${s}}" > "Process_\${m}{\${s}}"

	done
done

cd ..
done
#############################################################################$
endTime=\$(date +%s.%N)
endTime_string=\`date\`

elapsed=\`echo "(\$endTime-\$startTime)" |bc\`
htime=\`echo "\$elapsed/3600"|bc\`
mtime=\`echo "(\$elapsed/60)-(\$htime*60)"|bc\`
stime=\`echo "\$elapsed-((\$elapsed/60)*60)"|bc\`
echo "Start time : \$startTime_string"
echo "End time   : \$endTime_string"
echo "Total time : \${htime}H \${mtime}M \${stime}S"

EOF
fi 


#############################################################################
#
# Do Large job
# 
#############################################################################
if [ ${opt} == "do_large" ]; then
cat << EOF > ${fjob} 
#!/bin/sh
node_process=10

#############################################
# Main Paramaters

#bath number
cista=${cista}
ciend=${ciend}
sista=${sista}
siend=${siend}

#option input
CodePath="${CodePath}"

# inputfiles
BathFile="${BathFile}"
AvaaxFile="${AvaaxFile}"
StateFile="${StateFile}"
ExStateFile="${ExStateFile}"

configures=\$(seq \${cista} 1 \${ciend})
states=\$(seq \${sista} 1 \${siend})

#time checking
startTime=\$(date +%s.%N)
startTime_string=\`date\`

#############################################################################
#about CCE2 calculation 

for var in ${varOpt}
do

cd \${var}${unit}

option_input="./ccein.js"
# outfiles
mkdir rawdata
outFile="${OutFileDir}${OutFileHead}${VariableName}_\${var}${unit}_"

for m in \$configures
do
	for s in \$states
	do

   	 mpirun -n \${node_process} \${CodePath} -f \${option_input} -I "\${BathFile}\${m}" -a "\${AvaaxFile}\${m}" -s "\${StateFile}\${s}" -S "\${ExStateFile}\${s}" -N 1 -o "\${outFile}\${m}{\${s}}" > "Process_\${m}{\${s}}"

	done
done

cd ..
done
#############################################################################$
endTime=\$(date +%s.%N)
endTime_string=\`date\`

elapsed=\`echo "(\$endTime-\$startTime)" |bc\`
htime=\`echo "\$elapsed/3600"|bc\`
mtime=\`echo "(\$elapsed/60)-(\$htime*60)"|bc\`
stime=\`echo "\$elapsed-((\$elapsed/60)*60)"|bc\`
echo "Start time : \$startTime_string"
echo "End time   : \$endTime_string"
echo "Total time : \${htime}H \${mtime}M \${stime}S"

EOF
chmod +x ${fjob} 
fi
