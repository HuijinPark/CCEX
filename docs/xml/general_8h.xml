<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="general_8h" kind="file">
    <compoundname>general.h</compoundname>
    <includes refid="utilities_8h" local="yes">utilities.h</includes>
    <includedby refid="bath_8h" local="yes">/home/huijin/git/CCEX/include/bath.h</includedby>
    <includedby refid="cluster_8h" local="yes">/home/huijin/git/CCEX/include/cluster.h</includedby>
    <includedby refid="option_8h" local="yes">/home/huijin/git/CCEX/include/option.h</includedby>
    <includedby refid="output_8h" local="yes">/home/huijin/git/CCEX/include/output.h</includedby>
    <includedby refid="reader_8h" local="yes">/home/huijin/git/CCEX/include/reader.h</includedby>
    <includedby refid="simulator_8h" local="yes">/home/huijin/git/CCEX/include/simulator.h</includedby>
    <includedby refid="general_8cpp" local="yes">/home/huijin/git/CCEX/src/general.cpp</includedby>
    <incdepgraph>
      <node id="72">
        <label>Eigen/Dense</label>
      </node>
      <node id="75">
        <label>unistd.h</label>
      </node>
      <node id="70">
        <label>/home/huijin/git/CCEX/include/general.h</label>
        <link refid="general.h"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>iostream</label>
      </node>
      <node id="74">
        <label>mpi.h</label>
      </node>
      <node id="71">
        <label>utilities.h</label>
        <link refid="utilities_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="80">
        <label>/home/huijin/git/CCEX/include/option.h</label>
        <link refid="option_8h_source"/>
      </node>
      <node id="83">
        <label>/home/huijin/git/CCEX/include/reader.h</label>
        <link refid="reader_8h_source"/>
      </node>
      <node id="84">
        <label>/home/huijin/git/CCEX/include/output.h</label>
        <link refid="output_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>/home/huijin/git/CCEX/include/cluster_hash.h</label>
        <link refid="cluster__hash_8h_source"/>
      </node>
      <node id="81">
        <label>/home/huijin/git/CCEX/include/simulator.h</label>
        <link refid="simulator_8h_source"/>
      </node>
      <node id="77">
        <label>/home/huijin/git/CCEX/include/bath.h</label>
        <link refid="bath_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>/home/huijin/git/CCEX/include/defect.h</label>
        <link refid="defect_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>/home/huijin/git/CCEX/include/general.h</label>
        <link refid="general.h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>/home/huijin/git/CCEX/include/cluster.h</label>
        <link refid="cluster_8h_source"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structConfig" prot="public">Config</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="general_8h_1a4f952ed3569740aa89b6be7b5afd4321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
        <definition>Config* Config_init</definition>
        <argsstring>()</argsstring>
        <name>Config_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="110" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="7" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a5457d5f1e38782ee084dd1079d73f2e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeAll</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeAll</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="111" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="68" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a7d73746c56f3baa112a558892d0a03e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_report</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_report</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="112" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="547" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a41d726c3a7b615ddae19f3b5a50d2d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getMethod</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getMethod</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="117" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a6061f91ac9ac22e546a21e9f63f027b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getQuantity</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getQuantity</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="118" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a51c0628befb8b712ab22b2c7cd6f80ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getOrder</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getOrder</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="119" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1afaa2e9ce248eb4cecdcb6f7faa6a8c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* Config_getBfield</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getBfield</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="120" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ad5a5b1572fcb8a48981e93575aee72ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Config_getRbath</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getRbath</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="121" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aaf5b7058b0c00f08c197741e8e9a7932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Config_getRdip</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getRdip</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="122" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a416f16fab6ef1ee6dd757e726086d448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Config_getDeltat</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getDeltat</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="123" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a1c9fb28c3e98a13e69ac8a9073a9c2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getNstep</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getNstep</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="124" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a51108b91abceb223e7e736c0d3573d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Config_getRbathcut</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getRbathcut</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="125" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1abb247e7fb9aefc5be91056f34fd14a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Config_getRdipcut</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getRdipcut</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="126" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a5bd04bfb722b1dcfb6368d4289b6f374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getNstate</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getNstate</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="127" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a9caeed1bd213580af2abf87e40b64a0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getSeed</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getSeed</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="128" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a3c5a005f00774bb23a01d9a1f87105a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getQubitfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getQubitfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="129" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a2def855434b90a848cc3427d387edad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getGyrofile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getGyrofile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="130" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ac8cd55e10be6e7cf2eefcbfb89bc3123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getNbathfiles</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getNbathfiles</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="131" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ac95305095d92a7f6ff7c257f6987d2c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getBathfiles_i</definition>
        <argsstring>(Config *cnf, int i)</argsstring>
        <name>Config_getBathfiles_i</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="132" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a9fb5259ff948259eddf043e0178f5491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double* Config_getBathadjust_i</definition>
        <argsstring>(Config *cnf, int i)</argsstring>
        <name>Config_getBathadjust_i</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="133" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a84c31e4b70d8a9434347ba124715270f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getAvaaxfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getAvaaxfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="134" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a2a371b2693462f52fd83e98f62140535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getStatefile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getStatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="135" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ac6972377edd51d0bbe9a8b94eb162559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getExstatefile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getExstatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="136" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a2b92eae6ce48ff5272dc38e004b3fbee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_get_nflines</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_get_nflines</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="137" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aa405f61d334cf85df28ebf9087d82441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* Config_get_flines</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_get_flines</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="138" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a7856240d6340f204691b339875292897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_get_flines_i</definition>
        <argsstring>(Config *cnf, int i)</argsstring>
        <name>Config_get_flines_i</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="139" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a99c936f38b92c6ab9c71ef76ec00f250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Config_getDefectTotSpin</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getDefectTotSpin</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="140" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a2154992e78c2a40fbff7b5b05c6011d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Config_getCorrTotSpin</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getCorrTotSpin</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="141" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a9d87919e3542bb96f5d32c418283fe05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getHf_tensorfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getHf_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="142" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a8d09482af389a91264acf63d59d05dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Config_getHf_cutoff</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getHf_cutoff</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="143" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a49e3eaa6fe70087cf2e93d0559d4a4a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getHf_ignore_oor</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getHf_ignore_oor</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="144" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1adc4a11d8d54b6e6ad4bb85a758f3af33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getHf_readmode</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getHf_readmode</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="145" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a7281e51bda7812ee4c08448a20e5bf9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getQd_tensorfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getQd_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="146" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1af285d467111ef48ed930c8c89658ee9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Config_getQd_tensorfile_woqubit</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getQd_tensorfile_woqubit</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="147" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a947cc191b3c46ae83aee0b5df9d4c25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Config_getQd_readmode</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_getQd_readmode</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="148" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ab9d6cd3b59f7e86eb5db0c0e1761afd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setMethod</definition>
        <argsstring>(Config *cnf, char *method)</argsstring>
        <name>Config_setMethod</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="151" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="260" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aca116ace81e102559a4078672b2f28de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setQuantity</definition>
        <argsstring>(Config *cnf, char *quantity)</argsstring>
        <name>Config_setQuantity</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="152" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="280" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a3a81366c127f7ca59ac042d30f0db2b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setOrder</definition>
        <argsstring>(Config *cnf, int order)</argsstring>
        <name>Config_setOrder</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="153" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1af6d662180e205c6bde39cb76a7586882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setBfield</definition>
        <argsstring>(Config *cnf, float *bfield)</argsstring>
        <name>Config_setBfield</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bfield</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="154" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a182c9ef0dc923db614c94697fb3d90fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setBfield_z</definition>
        <argsstring>(Config *cnf, float bz)</argsstring>
        <name>Config_setBfield_z</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="155" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1afe7a09f35fe0a2d08af6f8ca0f91a41f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setRbath</definition>
        <argsstring>(Config *cnf, float rbath)</argsstring>
        <name>Config_setRbath</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rbath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="156" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="317" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a54f86af16bb966e34eb3bcd67ae60849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setRdip</definition>
        <argsstring>(Config *cnf, float rdip)</argsstring>
        <name>Config_setRdip</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rdip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="157" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="326" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ac1f38580cccd8771c9859a5561c2f138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setDeltat</definition>
        <argsstring>(Config *cnf, float deltat)</argsstring>
        <name>Config_setDeltat</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="158" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="335" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a0ff2c79345cfe951670b38ad1a548833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setNstep</definition>
        <argsstring>(Config *cnf, int nstep)</argsstring>
        <name>Config_setNstep</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nstep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="159" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="344" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a08588a320c4b1af0d01b4d20a18425dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setRbathcut</definition>
        <argsstring>(Config *cnf, float rbathcut)</argsstring>
        <name>Config_setRbathcut</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rbathcut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="160" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="353" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a2a062ca3eb9ecd83fa62050befd8e25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setRdipcut</definition>
        <argsstring>(Config *cnf, float rdipcut)</argsstring>
        <name>Config_setRdipcut</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rdipcut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="161" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="362" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a22a4d643d710e7436f33603dc663c100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setNstate</definition>
        <argsstring>(Config *cnf, int nstate)</argsstring>
        <name>Config_setNstate</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nstate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="162" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="371" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a0be10ff40c807ace16ad4d218f369590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setSeed</definition>
        <argsstring>(Config *cnf, int seed)</argsstring>
        <name>Config_setSeed</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="163" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="380" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a6dbf858c46e48bd3216d8ffaaa8049a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setQubitfile</definition>
        <argsstring>(Config *cnf, char *qubitfile)</argsstring>
        <name>Config_setQubitfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>qubitfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="164" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="389" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1af819ec0ac25e6822f0953523e7674809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setGyrofile</definition>
        <argsstring>(Config *cnf, char *gyrofile)</argsstring>
        <name>Config_setGyrofile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>gyrofile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="165" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="399" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a0ca01a7190870d1ef5c4d48a2bee0f65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setNbathfiles</definition>
        <argsstring>(Config *cnf, int nbathfiles)</argsstring>
        <name>Config_setNbathfiles</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbathfiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="166" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="408" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aa6207e7787ea536ae2e452d40f8d84e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setBathfiles_i</definition>
        <argsstring>(Config *cnf, char *bathfiles, int i)</argsstring>
        <name>Config_setBathfiles_i</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>bathfiles</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="167" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="417" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a97934fcf9aeb81a0940e4d40508493fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setBathadjust_i</definition>
        <argsstring>(Config *cnf, double *bathadjust, int i)</argsstring>
        <name>Config_setBathadjust_i</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bathadjust</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="168" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="426" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a95ce79095c52cf315418408d042f5449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setAvaaxfile</definition>
        <argsstring>(Config *cnf, char *avaaxfile)</argsstring>
        <name>Config_setAvaaxfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>avaaxfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="169" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="435" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a1374a0626fa6f4d580fa91182003e9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setStatefile</definition>
        <argsstring>(Config *cnf, char *statefile)</argsstring>
        <name>Config_setStatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>statefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="170" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="445" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a4d703a15fef7068d6c0e9011252f0ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setExstatefile</definition>
        <argsstring>(Config *cnf, char *exstatefile)</argsstring>
        <name>Config_setExstatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>exstatefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="171" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="455" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ae1bdf66788f0f2b5464506c496c64dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_set_nflines</definition>
        <argsstring>(Config *cnf, int nflines)</argsstring>
        <name>Config_set_nflines</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nflines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="172" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="465" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ab9ee6fc49a920a115f8fe5e5fa4766e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_set_flines_i</definition>
        <argsstring>(Config *cnf, int fline, int i)</argsstring>
        <name>Config_set_flines_i</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="173" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="469" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a5895c77e355f91708f87e30a370f2c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setDefectTotSpin</definition>
        <argsstring>(Config *cnf, double DefectTotSpin)</argsstring>
        <name>Config_setDefectTotSpin</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>DefectTotSpin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="175" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="473" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a9637ac03d467f2df67b3dd7c5800df67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setCorrTotSpin</definition>
        <argsstring>(Config *cnf, double CorrTotSpin)</argsstring>
        <name>Config_setCorrTotSpin</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>CorrTotSpin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="176" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="477" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a2219e64eb98f2100b0ed8d1df9963b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setHf_tensorfile</definition>
        <argsstring>(Config *cnf, char *hf_tensorfile)</argsstring>
        <name>Config_setHf_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hf_tensorfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="177" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="481" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ace4c88a9e06c7a30c1915d4a6c477de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setHf_cutoff</definition>
        <argsstring>(Config *cnf, double hf_cutoff)</argsstring>
        <name>Config_setHf_cutoff</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hf_cutoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="178" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="490" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a07c6db6c92fd4f2b813f03f5c3997caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setHf_ignore_oor</definition>
        <argsstring>(Config *cnf, int hf_ignore_oor)</argsstring>
        <name>Config_setHf_ignore_oor</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hf_ignore_oor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="179" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="499" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1af13158c1491e55bf04c54bf4ad09483b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setHf_readmode</definition>
        <argsstring>(Config *cnf, int hf_readmode)</argsstring>
        <name>Config_setHf_readmode</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hf_readmode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="180" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="508" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a655da4d9da8afbc2b974d76375461631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setQd_tensorfile</definition>
        <argsstring>(Config *cnf, char *qd_tensorfile)</argsstring>
        <name>Config_setQd_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>qd_tensorfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="181" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="518" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aae28dfc886b8d2c1ad9e9446482e6a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setQd_tensorfile_woqubit</definition>
        <argsstring>(Config *cnf, char *qd_tensorfile_woqubit)</argsstring>
        <name>Config_setQd_tensorfile_woqubit</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>qd_tensorfile_woqubit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="182" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="527" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a23394467ea3fce27338a44df9114202b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_setQd_readmode</definition>
        <argsstring>(Config *cnf, int qd_readmode)</argsstring>
        <name>Config_setQd_readmode</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>qd_readmode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="183" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="536" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a3099481301694e3b583126dd01f6b41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocBathfiles</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocBathfiles</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="186" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a90cdf1474df25d6ff81db496cd9f391c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_reallocBathfiles</definition>
        <argsstring>(Config *cnf, int oldsize, int newsize)</argsstring>
        <name>Config_reallocBathfiles</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>oldsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="187" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a730db6d0643d20643ebf2b5466248383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocBathadjust</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocBathadjust</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="188" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a8b1d3800925035ace8ce968f60c3da91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocGyrofile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocGyrofile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="189" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a6692a2f5f43adeff2f75d9d94eaa5cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocQubitfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocQubitfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="190" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aa1f67a5106cd44bb119f9f4784e0d9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocAvaaxfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocAvaaxfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="191" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aef6063ae82066db8e14b73e104a68435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocStatefile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocStatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="192" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1adc64b1f36e4d4130541462e0c18c7f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocExstatefile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocExstatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="193" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a3e3c20dcf89d0ace21431c64b26158fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_alloc_flines</definition>
        <argsstring>(Config *cnf, int size)</argsstring>
        <name>Config_alloc_flines</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="194" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aed7d0b75a04ea19d27d027931dc53731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_realloc_flines</definition>
        <argsstring>(Config *cnf, int oldsize, int newsize)</argsstring>
        <name>Config_realloc_flines</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>oldsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="195" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ad83d7a1e61ec487ea6d929788f340e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocHf_tensorfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocHf_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="196" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a742b95c79721b86a4162d10aa0d08eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocQd_tensorfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocQd_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="197" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a43c136980d8460e70377fc91f5122c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_allocQd_tensorfile_woqubit</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_allocQd_tensorfile_woqubit</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="198" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a8c2fd8c87cfd7e3f880744306505386a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeBathfiles</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeBathfiles</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="201" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a9dc2904c449656fc22c7e3214c2690e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeBathadjust</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeBathadjust</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="202" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a56063b0026c1a0d6f2cddb7ef42549c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeGyrofile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeGyrofile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="203" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1af309b935998669e190a6e301ed00386a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeQubitfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeQubitfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="204" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1aae13f375f0ce5ab42f8cf2cb06f399f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeAvaaxfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeAvaaxfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="205" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ab7afe8a59ae9dc523317b0c3a0ab2b26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeStatefile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeStatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="206" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1abe7d44f78e6cb41c0a852f7cd35910eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeExstatefile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeExstatefile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="207" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a22d65b9089b9f5a5d02910f873a484c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_free_flines</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_free_flines</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="208" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a58cc50b78b8c32284c435fecfa801f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeHf_tensorfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeHf_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="209" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a92f338595217914f0f1b0632f227c7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeQd_tensorfile</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeQd_tensorfile</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="210" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a94cee11059dfe6e41e761a6e04cddc64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Config_freeQd_tensorfile_woqubit</definition>
        <argsstring>(Config *cnf)</argsstring>
        <name>Config_freeQd_tensorfile_woqubit</name>
        <param>
          <type><ref refid="structConfig" kindref="compound">Config</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/huijin/git/CCEX/include/general.h" line="211" column="1" bodyfile="/home/huijin/git/CCEX/src/general.cpp" bodystart="123" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__CCEX_SIMULATOR_GENERAL_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__CCEX_SIMULATOR_GENERAL_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utilities.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structConfig" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Method</highlight></codeline>
<codeline lineno="33" refid="structConfig_1a73d927bf5bdb0f39d024b23dc66f0c1c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>method[MAX_CHARARRAY_LENGTH];</highlight></codeline>
<codeline lineno="34" refid="structConfig_1a408cf9618ed41aefd0b0c323f57e0730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>quantity[MAX_CHARARRAY_LENGTH];<sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>General<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structConfig_1a3a9071ea9a9409cefb8cbcea2184c879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structConfig_1a3a9071ea9a9409cefb8cbcea2184c879" kindref="member">order</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structConfig_1abf4c62b17ba762512fab9da0f1e193be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bfield[3];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structConfig_1a79389333cffeb4063cf1d39e89234c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a79389333cffeb4063cf1d39e89234c57" kindref="member">rbath</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="structConfig_1af9d5e3a3b185555cbe04ad12733612b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structConfig_1af9d5e3a3b185555cbe04ad12733612b1" kindref="member">rdip</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structConfig_1a6539de558079f55df76dce79c4079b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a6539de558079f55df76dce79c4079b33" kindref="member">deltat</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structConfig_1acd1675410784e93a9c9866de0c64807e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structConfig_1acd1675410784e93a9c9866de0c64807e" kindref="member">nstep</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="structConfig_1a2eeef76fa44792c24c3320ff6b4d19c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a2eeef76fa44792c24c3320ff6b4d19c8" kindref="member">rbathcut</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="structConfig_1a39b6cf20220772b2326ddf423bf3a3f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a39b6cf20220772b2326ddf423bf3a3f7" kindref="member">rdipcut</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="structConfig_1a91b2aadf805896022127036ded259e79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structConfig_1a91b2aadf805896022127036ded259e79" kindref="member">nstate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="structConfig_1a92ed038fd7676ed62640f59270a60545" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structConfig_1a92ed038fd7676ed62640f59270a60545" kindref="member">seed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Qubit<sp/>and<sp/>Bath<sp/>file<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structConfig_1a9f5ed3dfb6ae52627a94099cb837cfbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a9f5ed3dfb6ae52627a94099cb837cfbf" kindref="member">qubitfile</ref>;<sp/></highlight></codeline>
<codeline lineno="50" refid="structConfig_1a735f7f25b0847d08468616025a27ffe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a735f7f25b0847d08468616025a27ffe5" kindref="member">gyrofile</ref>;<sp/></highlight></codeline>
<codeline lineno="51" refid="structConfig_1a26827d7c075042372d21965a827328c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a26827d7c075042372d21965a827328c3" kindref="member">nbathfiles</ref>;<sp/></highlight></codeline>
<codeline lineno="52" refid="structConfig_1afe80a72359e5fc90a5f0f16e9f1d357e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><ref refid="structConfig_1afe80a72359e5fc90a5f0f16e9f1d357e" kindref="member">bathfiles</ref>;<sp/></highlight></codeline>
<codeline lineno="53" refid="structConfig_1a1ce641fcaac86656dde150e974ff5ff7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**<sp/><ref refid="structConfig_1a1ce641fcaac86656dde150e974ff5ff7" kindref="member">bathadjust</ref>;<sp/></highlight></codeline>
<codeline lineno="54" refid="structConfig_1ae3244e507716ae5483bb32a2e4fef809" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1ae3244e507716ae5483bb32a2e4fef809" kindref="member">avaaxfile</ref>;<sp/></highlight></codeline>
<codeline lineno="55" refid="structConfig_1a7ce40e0c9e172e7b2e213101b154760b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a7ce40e0c9e172e7b2e213101b154760b" kindref="member">statefile</ref>;<sp/></highlight></codeline>
<codeline lineno="56" refid="structConfig_1a70ec8756f364dc3d40201f951476137e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a70ec8756f364dc3d40201f951476137e" kindref="member">exstatefile</ref><sp/>;<sp/></highlight></codeline>
<codeline lineno="57" refid="structConfig_1aae1991f77e6f99acc5342c1944b46736" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structConfig_1aae1991f77e6f99acc5342c1944b46736" kindref="member">_nflines</ref>;<sp/></highlight></codeline>
<codeline lineno="58" refid="structConfig_1a20fb9e36c4c73d0890445628232c5636" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a20fb9e36c4c73d0890445628232c5636" kindref="member">_flines</ref>;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tensorfile-related</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structConfig_1a716389cd405e9c041cd3ac7c7608ccdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a716389cd405e9c041cd3ac7c7608ccdd" kindref="member">DefectTotSpin</ref>;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Central<sp/>spin<sp/>number<sp/>in<sp/>reading<sp/>Atensor<sp/>file<sp/>(default<sp/>S<sp/>=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>nesessary<sp/>for<sp/>calulation<sp/>of<sp/>Hyperfin<sp/>tensor<sp/>with<sp/>Atensor<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;ex.1&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>use<sp/>the<sp/>Q.E.,<sp/>you<sp/>will<sp/>set<sp/>this<sp/>value<sp/>which<sp/>you<sp/>want<sp/>(S=5/2<sp/>--&gt;<sp/>DefectTotSpin<sp/>=<sp/>5/2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;ex.2&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>using<sp/>VASP<sp/>version,<sp/>you<sp/>don&apos;t<sp/>consider<sp/>the<sp/>DefectTotSpin<sp/>value<sp/>(DefectTotSpin<sp/>=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;ex.3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>if<sp/>you<sp/>wat<sp/>to<sp/>use<sp/>other<sp/>central<sp/>spin<sp/>which<sp/>is<sp/>different<sp/>from<sp/>A-file<sp/>in<sp/>VASP<sp/>version,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>have<sp/>to<sp/>set<sp/>the<sp/>central<sp/>spin<sp/>which<sp/>you<sp/>want<sp/>(S=3/2<sp/>--&gt;<sp/>DefectTotSpin<sp/>=3/2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>,<sp/>and<sp/>then<sp/>you<sp/>will<sp/>change<sp/>CorrTotSpin<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structConfig_1ac923676eaaf0a911eb890ee419c2b8e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structConfig_1ac923676eaaf0a911eb890ee419c2b8e6" kindref="member">CorrTotSpin</ref>;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlation<sp/>value<sp/>of<sp/>total<sp/>spin<sp/>in<sp/>A-tensor<sp/>(default<sp/>:<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;ex.1&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>A-tensor<sp/>file<sp/>of<sp/>Q.E.,<sp/>automatically<sp/>it<sp/>adapt<sp/>the<sp/>central<sp/>spin<sp/>S<sp/>=<sp/>1/2<sp/>into<sp/>A-file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--&gt;<sp/>CorrTotSpin<sp/>=<sp/>1/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;ex.2&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>using<sp/>VASP<sp/>version,<sp/>you<sp/>don&apos;t<sp/>consider<sp/>the<sp/>CorrTotSpin<sp/>value<sp/>(CorrTotSpin<sp/>=<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;ex.3&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>if<sp/>you<sp/>want<sp/>to<sp/>use<sp/>other<sp/>central<sp/>spin<sp/>which<sp/>is<sp/>different<sp/>from<sp/>A-file<sp/>in<sp/>VASP<sp/>version,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>have<sp/>to<sp/>set<sp/>the<sp/>central<sp/>spin<sp/>of<sp/>A-file<sp/>(VASP;<sp/>Half<sp/>of<sp/>Total<sp/>magnetic<sp/>moment<sp/>(S/2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DFT<sp/>Hyperfine<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structConfig_1a3d4d5a3943f20928bdce09e64fa4bb37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a3d4d5a3943f20928bdce09e64fa4bb37" kindref="member">hf_readmode</ref>;<sp/></highlight></codeline>
<codeline lineno="86" refid="structConfig_1a52710072ec30b071e08c1b62f7450c0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a52710072ec30b071e08c1b62f7450c0f" kindref="member">hf_tensorfile</ref>;<sp/></highlight></codeline>
<codeline lineno="87" refid="structConfig_1af82a9ccd3b05247db3da179361faef85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structConfig_1af82a9ccd3b05247db3da179361faef85" kindref="member">hf_cutoff</ref><sp/>;<sp/></highlight></codeline>
<codeline lineno="88" refid="structConfig_1a840b086fb6ef148cea4e370967da30e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structConfig_1a840b086fb6ef148cea4e370967da30e9" kindref="member">hf_ignore_oor</ref>;<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DFT<sp/>Quadrupole<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structConfig_1adc1119b46a95084ddd4c7bfa2a8d50d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structConfig_1adc1119b46a95084ddd4c7bfa2a8d50d9" kindref="member">qd_readmode</ref>;<sp/></highlight></codeline>
<codeline lineno="93" refid="structConfig_1a91d5741035098807bc28000a003bd35d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a91d5741035098807bc28000a003bd35d" kindref="member">qd_tensorfile</ref>;<sp/></highlight></codeline>
<codeline lineno="94" refid="structConfig_1a93e5666a93192db9d1cd361381d64301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structConfig_1a93e5666a93192db9d1cd361381d64301" kindref="member">qd_tensorfile_woqubit</ref><sp/>;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>semi-classical<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>Interval_filter;<sp/>//<sp/>Default<sp/>:<sp/>500<sp/><sp/><sp/><sp/><sp/><sp/>//gsl<sp/>interval<sp/>in<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>Step_filter;<sp/>//<sp/>Default<sp/>:<sp/>100<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//filter<sp/>function<sp/>time<sp/>table<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>epsabs_filter;<sp/>//<sp/>Default<sp/>:<sp/>1e-10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>tolerance_filter;<sp/>//<sp/>Default<sp/>:<sp/>1e-10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>RoundOff_err_filter;<sp/>//<sp/>Default<sp/>:<sp/>1e+6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>SaveCorr;<sp/>//<sp/>Default<sp/>:<sp/>1<sp/><sp/><sp/><sp/>//1<sp/>:<sp/>save<sp/>the<sp/>correlation<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//filter<sp/>function<sp/>time<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;double&gt;<sp/>FilterTable;<sp/><sp/><sp/><sp/>//[0<sp/>~<sp/>1],<sp/>step<sp/>:<sp/>Step_filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><ref refid="structConfig" kindref="compound">Config</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="structConfig" kindref="compound">Config</ref>*<sp/>Config_init();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeAll(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_report(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Low<sp/>level<sp/>----------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getMethod(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getQuantity(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getOrder(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/>Config_getBfield(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>Config_getRbath(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>Config_getRdip(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>Config_getDeltat(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getNstep(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>Config_getRbathcut(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>Config_getRdipcut(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getNstate(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getSeed(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getQubitfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getGyrofile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getNbathfiles(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getBathfiles_i(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Config_getBathadjust_i(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getAvaaxfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getStatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getExstatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_get_nflines(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/>Config_get_flines(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_get_flines_i(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>Config_getDefectTotSpin(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>Config_getCorrTotSpin(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getHf_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>Config_getHf_cutoff(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getHf_ignore_oor(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getHf_readmode(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getQd_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/>Config_getQd_tensorfile_woqubit(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Config_getQd_readmode(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setMethod(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setQuantity(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>quantity);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setOrder(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setBfield(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>bfield);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setBfield_z(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bz);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setRbath(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rbath);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setRdip(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rdip);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setDeltat(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltat);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setNstep(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nstep);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setRbathcut(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rbathcut);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setRdipcut(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rdipcut);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setNstate(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nstate);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setSeed(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setQubitfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>qubitfile);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setGyrofile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>gyrofile);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setNbathfiles(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbathfiles);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setBathfiles_i(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bathfiles,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setBathadjust_i(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>bathadjust,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setAvaaxfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>avaaxfile);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setStatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>statefile);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setExstatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>exstatefile);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_set_nflines(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nflines);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_set_flines_i(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fline,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setDefectTotSpin(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DefectTotSpin);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setCorrTotSpin(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CorrTotSpin);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setHf_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hf_tensorfile);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setHf_cutoff(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hf_cutoff);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setHf_ignore_oor(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hf_ignore_oor);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setHf_readmode(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hf_readmode);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setQd_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>qd_tensorfile);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setQd_tensorfile_woqubit(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>qd_tensorfile_woqubit);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_setQd_readmode(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qd_readmode);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>alloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocBathfiles(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_reallocBathfiles(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocBathadjust(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocGyrofile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocQubitfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocAvaaxfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocStatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocExstatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_alloc_flines(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_realloc_flines(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocHf_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocQd_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_allocQd_tensorfile_woqubit(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeBathfiles(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeBathadjust(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeGyrofile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeQubitfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeAvaaxfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeStatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeExstatefile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_free_flines(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeHf_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeQd_tensorfile(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Config_freeQd_tensorfile_woqubit(<ref refid="structConfig" kindref="compound">Config</ref>*<sp/>cnf);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__CCEX_SIMULATOR_GENERAL_H_</highlight></codeline>
    </programlisting>
    <location file="/home/huijin/git/CCEX/include/general.h"/>
  </compounddef>
</doxygen>
